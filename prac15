5.1

import tkinter as tk
from tkinter import filedialog

def save_file(event=None):
    text_content = text_area.get("1.0", tk.END)
    file_path = filedialog.asksaveasfilename(
        defaultextension=".txt",
        filetypes=[("Текстовые файлы", "*.txt"), ("Все файлы", "*.*")]
    )
    if file_path:
        with open(file_path, "w", encoding="utf-8") as file:
            file.write(text_content)

def close_window(event=None):
    root.destroy()

root = tk.Tk()
root.title("Текстовый редактор")

# Многострочное поле ввода
text_area = tk.Text(root, wrap=tk.WORD, width=50, height=20)
text_area.pack(padx=10, pady=10)

# Кнопка сохранения
save_button = tk.Button(root, text="Сохранить", command=save_file)
save_button.pack(pady=5)

# Привязка горячих клавиш
root.bind("<Control-s>", save_file)
root.bind("<Escape>", close_window)

root.mainloop()

5.2

import tkinter as tk

def on_focus_in(event):
    widget_name = event.widget.winfo_name()
    label_status.config(text=f"Активное поле: {widget_name}")

def on_right_click(event):
    widget_name = event.widget.winfo_name()
    print(f"Правая кнопка на поле: {widget_name}")

root = tk.Tk()
root.title("Отслеживание полей ввода")

# Создаем метку для вывода информации
label_status = tk.Label(root, text="Активное поле: нет")
label_status.pack(pady=10)

# Создаем три поля ввода
entry1 = tk.Entry(root, name="Поле1")
entry1.pack(pady=5)

entry2 = tk.Entry(root, name="Поле2")
entry2.pack(pady=5)

entry3 = tk.Entry(root, name="Поле3")
entry3.pack(pady=5)

# Привязываем события для всех Entry
root.bind_class("Entry", "<FocusIn>", on_focus_in)
root.bind_class("Entry", "<Button-3>", on_right_click)

root.mainloop()

5.3

import tkinter as tk

def motion(event):
    label_coords.config(text=f"Координаты мыши: x={event.x}, y={event.y}")

root = tk.Tk()
root.title("Координаты мыши")
root.geometry("400x300")

# Метка для отображения координат
label_coords = tk.Label(root, text="Координаты мыши: x=0, y=0")
label_coords.pack(pady=20)

# Привязка движения мыши
root.bind("<Motion>", motion)

root.mainloop()

5.4

import tkinter as tk

def key_pressed(event):
    # Получаем символ нажатой клавиши
    char = event.char
    if char:  # Игнорируем служебные клавиши
        current_text = label_keys.cget("text")
        if "Нажатые клавиши:" in current_text:
            new_text = current_text + f", {char}"
        else:
            new_text = f"Нажатые клавиши: {char}"
        label_keys.config(text=new_text)

root = tk.Tk()
root.title("Отслеживание клавиш")

# Метка для отображения нажатых клавиш
label_keys = tk.Label(root, text="Нажатые клавиши:")
label_keys.pack(pady=20)

# Привязка события нажатия клавиш
root.bind("<Key>", key_pressed)

# Фокус на окне для получения событий клавиатуры
root.focus_set()

root.mainloop()