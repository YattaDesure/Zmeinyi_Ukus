def power(a: 'number for **' = 2, x: '**' = 0) -> float:
    
    #return  a,  in **  x.
   
    return a ** x

def factorial(n: 'num for factorial') -> int:

    if not isinstance(n, int) or n < 0:
        return -1
    if n == 0:
        return 1
    return n * factorial(n - 1)

def statistics(*numbers: 'list of nums for statistic') -> None:

    if not numbers:
        print("No nums.")
        return

    total_sum = sum(numbers)
    average = total_sum / len(numbers)
    max_value = max(numbers)
    min_value = min(numbers)
    count = len(numbers)

    print(f"Summ: {total_sum}")
    print(f"Middle: {average}")
    print(f"Max: {max_value}")
    print(f"Min: {min_value}")
    print(f"Amount: {count}")

def multiply_list(numbers: 'list of nums', multiplier: 'supplier' = -1) -> list:

    return [number * multiplier for number in numbers]

calculate_y = lambda a, x, b: a * x + b

print("Testing fun power:", power(2, 4))  # 16
print("Testing fun factorial:", factorial(5))  # 120
statistics(1, 2, 3, 4, 5, 6, 7)  
print("Testing fun multiply_list:", multiply_list([1, 2, 3], 2))  # [2, 4, 6]
print("Testing lyambda-fun calculate_y:", calculate_y(2, 3, 1))  # 7
